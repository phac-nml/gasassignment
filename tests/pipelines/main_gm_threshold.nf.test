nextflow_pipeline {

    name "Integration Tests of adjusting gm_thresholds parameters"
    script "main.nf"

    test("Test fail pipeline if null threshold set") {
        tag "pipeline_failure_null_threshold"

        when {
            params {
                input = "$baseDir/tests/data/samplesheets/samplesheet1.csv"
                outdir = "results"

                gm_thresholds = null
            }
        }

        then {
            assert workflow.failed
            assert workflow.stdout.contains("ERROR ~ --gm_thresholds null: Cannot pass null or empty string")
        }
    }

    test("Test fail pipeline if empty threshold set") {
        tag "pipeline_failure_no_threshold"

        when {
            params {
                input = "$baseDir/tests/data/samplesheets/samplesheet1.csv"
                outdir = "results"

                gm_thresholds = ""
            }
        }

        then {
            assert workflow.failed
            assert workflow.stdout.contains("ERROR ~ --gm_thresholds : Cannot pass null or empty string")
        }
    }

    test("Test fail pipeline if negative threshold set") {
        tag "pipeline_failure_negative_threshold"

        when {
            params {
                input = "$baseDir/tests/data/samplesheets/samplesheet1.csv"
                outdir = "results"

                gm_thresholds = "-1"
            }
        }

        then {
            assert workflow.failed
            assert workflow.stderr.contains('* --gm_thresholds: string [-1] does not match pattern ^(\\d+(\\.\\d+)?,)*\\d+(\\.\\d+)?$ (-1)')
        }
    }

    test("Test fail pipeline if mismatch between thresholds and scaled distm") {
        tag "pipeline_failure_threshold_scaled"

        when {
            params {
                input = "$baseDir/tests/data/samplesheets/samplesheet1.csv"
                outdir = "results"

                gm_thresholds = "1,0.5,2"
                pd_distm = "scaled"
            }
        }

        then {
            assert workflow.failed
            assert workflow.stdout.contains("ERROR ~ '--pd_distm scaled' is set, but '--gm_thresholds 1,0.5,2' contains thresholds outside of range [0,1]."
                                            + " Please either set '--pd_distm hamming' or adjust the threshold values.")
        }
    }

    test("Test fail pipeline if mismatch between thresholds and hamming distm") {
        tag "pipeline_failure_threshold_hamming"

        when {
            params {
                input = "$baseDir/tests/data/samplesheets/samplesheet1.csv"
                outdir = "results"

                gm_thresholds = "2,1,0.5"
                pd_distm = "hamming"
            }
        }

        then {
            assert workflow.failed
            assert workflow.stdout.contains("ERROR ~ '--pd_distm hamming' is set, but '--gm_thresholds 2,1,0.5' contains fractions."
                                            + " Please either set '--pd_distm scaled' or remove fractions from distance thresholds.")
        }
    }

    test("Test pipeline with single threshold set to 1") {
        tag "pipeline_thresh_1"

        when {
            params {
                input = "$baseDir/tests/data/samplesheets/samplesheet1.csv"
                outdir = "results"

                gm_thresholds = "1"
            }
        }

        then {
            assert workflow.failed
            assert (workflow.stdout =~ /Error \[1.0\]  supplied thresholds do not equal the number of threshold columns in reference_clusters.txt/).find()
        }
    }

    test("Test pipeline with threshold set to 1,0") {
        tag "pipeline_thresh_1.0"

        when {
            params {
                input = "$baseDir/tests/data/samplesheets/samplesheet1.csv"
                outdir = "results"

                gm_thresholds = "1,0"
            }
        }

        then {
            assert workflow.failed
            assert (workflow.stdout =~ /Error \[1.0, 0.0\]  supplied thresholds do not equal the number of threshold columns in reference_clusters.txt/).find()
        }
    }
}
